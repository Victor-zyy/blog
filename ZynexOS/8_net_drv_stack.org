* Net Qemu Configuration
** QEMU
Before, in qemu2.3
#+begin_src sh
QEMUOPTS += -net user -net nic,model=e1000 -redir tcp:$(PORT7)::7 \
	   -redir tcp:$(PORT80)::80 -redir udp:$(PORT7)::7 -net dump,file=qemu.pcap
#+end_src
After, in qemu 7.0 check the *qemu-options.hx* and /doc/about/removed-features.txt
#+begin_src sh
QEMUOPTS += -netdev user,id=n1,ipv6=off -device e1000,netdev=n1,mac=52:54:98:76:54:32 -nic user,hostfwd=tcp::$(PORT7)-:7 \
	   -nic user,hostfwd=tcp::$(PORT80)-:80 -nic user,hostfwd=udp::$(PORT7)-:7 -object filter-dump,id=id,netdev=n1,file=qemu.pcap #refer to qemu-options.hx in qemu-7.0.0
#+end_src
The right answer of configuration for e1000 nic in qemu, is like this.
Actually, a netdev is the base default configuration port for network.
#+begin_src sh
QEMUOPTS += -netdev  user,id=net0,ipv6=off,hostfwd=tcp::$(PORT7)-:7,hostfwd=tcp::$(PORT80)-:80,hostfwd=udp::$(PORT7)-:7 -device e1000,netdev=net0,mac=52:54:00:12:34:56
# redirection of network port
QEMUOPTS += -object filter-dump,id=netdump0,netdev=net0,file=qemu.pcap #refer to qemu-options.hx in qemu-7.0.0
#+end_src
After configured, all the warnings left away.
** dtb
In qemu, we can get the dtb file when the all configuration is ok, it will dump dtb format into a file, then we use dtc compiler to decompile the dtb to dts file, in that way, we can see the full configuration of the device tree of board that qemu supplied.

#+begin_src sh
/opt/riscv-qemu-7.0.0/bin/qemu-system-riscv64 -nographic -M virt,dumpdtb=virt.dtb -m 256M -serial mon:stdio -D qemu.log -smp 1 -bios ./opensbi/fw_jump.bin -drive if=pflash,unit=0,format=raw,file=obj/kern/kernel.img  -netdev user,id=n1,ipv6=off -device e1000,netdev=n1,mac=52:54:98:76:54:32 -nic user,hostfwd=tcp::26001-:7 -nic user,hostfwd=tcp::26002-:80 -nic user,hostfwd=udp::26001-:7 -object filter-dump,id=id,netdev=n1,file=qemu.pcap  
#+end_src

Options dumpdtb=file.dtb

Then you can decompile the Device Tree binary with:
#+begin_src sh

dtc -I dtb -O dts <your DTB> -o <dts filename>

e.g.

dtc -I dtb -O dts working.dtb -o /tmp/my_device_tree.dts
#+end_src

** qemu command
We see the e1000 is on, after checking the info network command.
#+begin_src
  (qemu) info network 
#net008: index=0,type=user,net=10.0.2.0,restrict=off
#net105: index=0,type=user,net=10.0.2.0,restrict=off
#net210: index=0,type=user,net=10.0.2.0,restrict=off
e1000.0: index=0,type=nic,model=e1000,macaddr=52:54:98:76:54:32
 \ n1: index=0,type=user,net=10.0.2.0,restrict=off
filters:
  - id: type=filter-dump,file=qemu.pcap,maxlen=65536,position=tail,status=on,insert=behind,netdev=n1,queue=all

#+end_src

#+begin_src sh
(qemu) info network 
e1000.0: index=0,type=nic,model=e1000,macaddr=52:54:00:12:34:56
 \ net0: index=0,type=user,net=10.0.2.0,restrict=off
filters:
  - netdump0: type=filter-dump,file=qemu.pcap,maxlen=65536,position=tail,status=on,insert=behind,netdev=net0,queue=all
(qemu) 

#+end_src

* LWIP (low level tcp/ip stack)

* start up
As we know the make procedure in last post, now let's see the start up of the makefile. One way to go through this process is to see the linker file and the _start entry point in the start.S file in arch folder.
** arch/cpu/riscv/start.S

accept two args from the last stage, where a0 is the hartid getting from mhartid register, and the a1 is the dtb pointer passed by opensbi.
#+begin_src asm
	/*
	 * Save hart id and dtb pointer. The thread pointer register is not
	 * modified by C code. It is used by secondary_hart_loop.
	 */
	mv	tp, a0
	mv	s1, a1
#+end_src
initialize gp pointer register,
#+begin_src asm
	/*
	 * Set the global data pointer to a known value in case we get a very
	 * early trap. The global data pointer will be set its actual value only
	 * after it has been initialized.
	 */
	mv	gp, zero
#+end_src
set trap_handler,
#+begin_src asm
	/*
	 * Set the trap handler. This must happen after initializing gp because
	 * the handler may use it.
	 */
	la	t0, trap_entry
	csrw	MODE_PREFIX(tvec), t0
#+end_src
mask all interrupts, enable when supportting SMP.
#+begin_src asm
  	
	/*
	 * Mask all interrupts. Interrupts are disabled globally (in m/sstatus)
	 * for U-Boot, but we will need to read m/sip to determine if we get an
	 * IPI
	 */
	csrw	MODE_PREFIX(ie), zero
#+end_src

